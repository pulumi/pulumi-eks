name: "Test Provider"

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: Version of the provider to test

env:
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
  ALT_AWS_ACCESS_KEY_ID: ${{ secrets.ALT_AWS_ACCESS_KEY_ID }}
  ALT_AWS_SECRET_ACCESS_KEY: ${{ secrets.ALT_AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  GOLANGCI_LINT_VERSION: v1.61.0
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PROVIDER: eks
  PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_ENABLE_RESOURCE_REFERENCES: "1"
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  PYPI_USERNAME: __token__
  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  TF_APPEND_USER_AGENT: pulumi

jobs:
  test:
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
    name: test
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    env:
      PROVIDER_VERSION: ${{ inputs.version }}
    steps:
    # Run as first step so we don't delete things that have just been installed
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be
      with:
        tool-cache: false
        swap-storage: false
        dotnet: false
    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        ref: ${{ env.PR_COMMIT_SHA }}
        persist-credentials: false
    - name: Setup tools
      uses: ./.github/actions/setup-tools
      with:
        tools: pulumictl, pulumicli, go, nodejs, python, dotnet, java
    - name: Download bin
      uses: ./.github/actions/download-bin
    - name: Add NuGet source
      run: dotnet nuget add source ${{ github.workspace }}/nuget
    - name: Download nodejs SDK
      uses: ./.github/actions/download-sdk
      with:
        language: nodejs
    - name: Download python SDK
      uses: ./.github/actions/download-sdk
      with:
        language: python
    - name: Download dotnet SDK
      uses: ./.github/actions/download-sdk
      with:
        language: dotnet
    - name: Download go SDK
      uses: ./.github/actions/download-sdk
      with:
        language: go
    - name: Download java SDK
      uses: ./.github/actions/download-sdk
      with:
        language: java
    - name: Update path
      run: echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
    - name: Install Python deps
      run: |-
        pip3 install virtualenv==20.0.23
        pip3 install pipenv
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: ${{ env.AWS_REGION }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 7200
        role-session-name: eks@githubActions
        role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
    - name: Install dependencies
      run: make install_sdks

    # TODO: This should be a make target.
    - name: Generate shard
      id: shard
      uses: hashicorp-forge/go-test-split-action@v2.0.0
      with:
        working-directory: examples # TODO: Parameterize this.
        flags: -tags=all
        total: ${{ matrix.total }}
        index: ${{ matrix.index }}
    - name: Run example tests
      run: make test_shard
      env:
        TAGS: all
        TESTS: ${{ steps.shard.outputs.run}}
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        total:
        - 10
        index:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
