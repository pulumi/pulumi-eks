env:
  ALT_AWS_ACCESS_KEY_ID: ${{ secrets.ALT_AWS_ACCESS_KEY_ID }}
  ALT_AWS_SECRET_ACCESS_KEY: ${{ secrets.ALT_AWS_SECRET_ACCESS_KEY }}
  ALT_AWS_PROFILE: ${{ secrets.ALT_AWS_PROFILE }}
  AWS_REGION: us-west-2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PROVIDER: eks
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@d62853bc9e466834c74cefb34fad78535582e21a
        with:
          repo: pulumi/pulumictl
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
      - name: Update PATH for Yarn
        run: |
          echo "::add-path::$HOME/.yarn/bin"
          echo "::add-path::$HOME/.config/yarn/global/node_modules/.bin"
      - name: Run lint
        run: make lint
  build_sdk:
    name: build_sdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@d62853bc9e466834c74cefb34fad78535582e21a
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@releases/v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Compress SDK folder
        run: tar -zcf ${{ matrix.language }}/${{ matrix.language }}.tar.gz -C ${{ matrix.language }}/eks
          .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk.tar.gz
          path: ${{ github.workspace}}/${{ matrix.language }}/${{ matrix.language }}.tar.gz
    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.15.x
        language:
          - nodejs
        nodeversion:
          - 13.x
  test:
    name: test
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install Kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv kubectl /usr/local/bin
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@d62853bc9e466834c74cefb34fad78535582e21a
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@releases/v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Download SDK
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.language }}-sdk.tar.gz
          path: ${{ github.workspace}}/${{ matrix.language }}/
      - name: Uncompress SDK folder
        run: tar -zxf ${{ github.workspace}}/${{ matrix.language }}/${{ matrix.language }}.tar.gz -C ${{
          github.workspace}}/${{ matrix.language}}/eks
      - name: Install dependencies
        run: make install_${{ matrix.language}}_sdk
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Configure AWS CLI
        run: |
          aws configure set default.aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set default.aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_access_key_id ${{ secrets.ALT_AWS_ACCESS_KEY_ID }} --profile ${{ secrets.ALT_AWS_PROFILE }}
          aws configure set aws_secret_access_key ${{ secrets.ALT_AWS_SECRET_ACCESS_KEY }} --profile ${{ secrets.ALT_AWS_PROFILE }}
      - name: Run tests
        run: make test_${{ matrix.language}}
    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.15.x
        language:
          - nodejs
        nodeversion:
          - 13.x
name: pull-request
"on":
  pull_request:
    branches:
      - master
