# It may be tempting to add parens around each individual clause in this expression, but Travis then builds pushes anyway
if: branch = master OR branch =~ ^features/ OR branch =~ ^release/ OR tag IS present
language: go
go: 1.13.4
sudo: true # give us 7.5GB and >2 bursted cores.
git:
  depth: false
before_install:
    - git clone https://github.com/pulumi/scripts ${GOPATH}/src/github.com/pulumi/scripts
    - source ${GOPATH}/src/github.com/pulumi/scripts/ci/prepare-environment.sh
    - source ${PULUMI_SCRIPTS}/ci/keep-failed-tests.sh
install:
    - source ${PULUMI_SCRIPTS}/ci/install-common-toolchain.sh
    # Install Pulumi
    - curl -L https://get.pulumi.com/ | bash
    - export PATH=$HOME/.pulumi/bin:$PATH
    # Install kubectl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - sudo mv kubectl /usr/local/bin
    # Setup default AWS credentials.
    - aws configure set default.aws_access_key_id $DEFAULT_AWS_ACCESS_KEY_ID
    - aws configure set default.aws_secret_access_key $DEFAULT_AWS_SECRET_ACCESS_KEY
    # Setup alternative AWS credentials using an AWS Named Profile for testing.
    - aws configure set aws_access_key_id $ALT_AWS_ACCESS_KEY_ID --profile $ALT_AWS_PROFILE
    - aws configure set aws_secret_access_key $ALT_AWS_SECRET_ACCESS_KEY --profile $ALT_AWS_PROFILE
before_script:
    - ${PULUMI_SCRIPTS}/ci/ensure-dependencies
script:
    - make travis_${TRAVIS_EVENT_TYPE}
after_failure:
    - ${PULUMI_SCRIPTS}/ci/upload-failed-tests
notifications:
    webhooks: https://zlmgkhmhjc.execute-api.us-west-2.amazonaws.com/stage/travis
