// *** WARNING: this file was generated by pulumi-gen-eks. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***


export const AccessEntryType = {
    /**
     * Standard Access Entry Workflow. Allows users to input a username and kubernetesGroup, and to associate access policies.
     */
    Standard: "STANDARD",
    /**
     * For IAM roles used with AWS Fargate profiles.
     */
    FargateLinux: "FARGATE_LINUX",
    /**
     * For IAM roles associated with self-managed Linux node groups. Allows the nodes to join the cluster.
     */
    EC2Linux: "EC2_LINUX",
    /**
     * For IAM roles associated with self-managed Windows node groups. Allows the nodes to join the cluster.
     */
    EC2Windows: "EC2_WINDOWS",
} as const;

/**
 * The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
 * Defaults to STANDARD which provides the standard workflow. EC2_LINUX and EC2_WINDOWS types disallow users to input a kubernetesGroup, and prevent associating access policies.
 */
export type AccessEntryType = (typeof AccessEntryType)[keyof typeof AccessEntryType];

export const AuthenticationMode = {
    /**
     * Only aws-auth ConfigMap will be used for authenticating to the Kubernetes API.
     */
    ConfigMap: "CONFIG_MAP",
    /**
     * Only Access Entries will be used for authenticating to the Kubernetes API.
     */
    Api: "API",
    /**
     * Both aws-auth ConfigMap and Access Entries can be used for authenticating to the Kubernetes API.
     */
    ApiAndConfigMap: "API_AND_CONFIG_MAP",
} as const;

/**
 * The authentication mode of the cluster. Valid values are `CONFIG_MAP`, `API` or `API_AND_CONFIG_MAP`.
 *
 * See for more details:
 * https://docs.aws.amazon.com/eks/latest/userguide/grant-k8s-access.html#set-cam
 */
export type AuthenticationMode = (typeof AuthenticationMode)[keyof typeof AuthenticationMode];
