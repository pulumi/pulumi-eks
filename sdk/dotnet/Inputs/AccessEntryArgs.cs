// *** WARNING: this file was generated by pulumi-gen-eks. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Eks.Inputs
{

    /// <summary>
    /// Access entries allow an IAM principal to access your cluster.
    /// 
    /// You have the following options for authorizing an IAM principal to access Kubernetes objects on your cluster: Kubernetes role-based access control (RBAC), Amazon EKS, or both.
    /// Kubernetes RBAC authorization requires you to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects, in addition to managing access entries. If you use Amazon EKS authorization exclusively, you don't need to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects.
    /// </summary>
    public sealed class AccessEntryArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicies")]
        private Dictionary<string, Input<Inputs.AccessPolicyAssociationArgs>>? _accessPolicies;

        /// <summary>
        /// The access policies to associate to the access entry.
        /// </summary>
        public Dictionary<string, Input<Inputs.AccessPolicyAssociationArgs>> AccessPolicies
        {
            get => _accessPolicies ?? (_accessPolicies = new Dictionary<string, Input<Inputs.AccessPolicyAssociationArgs>>());
            set => _accessPolicies = value;
        }

        [Input("kubernetesGroups")]
        private InputList<string>? _kubernetesGroups;

        /// <summary>
        /// A list of groups within Kubernetes to which the IAM principal is mapped to.
        /// </summary>
        public InputList<string> KubernetesGroups
        {
            get => _kubernetesGroups ?? (_kubernetesGroups = new InputList<string>());
            set => _kubernetesGroups = value;
        }

        /// <summary>
        /// The IAM Principal ARN which requires Authentication access to the EKS cluster.
        /// </summary>
        [Input("principalArn", required: true)]
        public Input<string> PrincipalArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags to apply to the AccessEntry.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
        /// Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
        /// </summary>
        [Input("type")]
        public Input<Pulumi.Eks.AccessEntryType>? Type { get; set; }

        /// <summary>
        /// Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public AccessEntryArgs()
        {
        }
        public static new AccessEntryArgs Empty => new AccessEntryArgs();
    }
}
