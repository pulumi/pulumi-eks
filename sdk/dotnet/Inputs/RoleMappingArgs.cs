// *** WARNING: this file was generated by pulumi-gen-eks. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Eks.Inputs
{

    /// <summary>
    /// Describes a mapping from an AWS IAM role to a Kubernetes user and groups.
    /// </summary>
    public sealed class RoleMappingArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessPolicies")]
        private InputList<Inputs.AccessPolicyAssociationArgs>? _accessPolicies;

        /// <summary>
        /// A list of EKS access policies to associate with the role. This is only applicable when the mode of cluster authentication is either `API_AND_CONFIG_MAP` or `API`.
        /// </summary>
        public InputList<Inputs.AccessPolicyAssociationArgs> AccessPolicies
        {
            get => _accessPolicies ?? (_accessPolicies = new InputList<Inputs.AccessPolicyAssociationArgs>());
            set => _accessPolicies = value;
        }

        [Input("groups", required: true)]
        private InputList<string>? _groups;

        /// <summary>
        /// A list of groups within Kubernetes to which the role is mapped.
        /// </summary>
        public InputList<string> Groups
        {
            get => _groups ?? (_groups = new InputList<string>());
            set => _groups = value;
        }

        /// <summary>
        /// The ARN of the IAM role to add.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// The user name within Kubernetes to map to the IAM role. By default, the user name is the ARN of the IAM role.
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        public RoleMappingArgs()
        {
        }
        public static new RoleMappingArgs Empty => new RoleMappingArgs();
    }
}
