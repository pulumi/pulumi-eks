// *** WARNING: this file was generated by pulumi-gen-eks. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Eks.Outputs
{

    /// <summary>
    /// Access entries allow an IAM principal to access your cluster.
    /// 
    /// You have the following options for authorizing an IAM principal to access Kubernetes objects on your cluster: Kubernetes role-based access control (RBAC), Amazon EKS, or both.
    /// Kubernetes RBAC authorization requires you to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects, in addition to managing access entries. If you use Amazon EKS authorization exclusively, you don't need to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects.
    /// </summary>
    [OutputType]
    public sealed class AccessEntry
    {
        /// <summary>
        /// The access policies to associate to the access entry.
        /// </summary>
        public readonly ImmutableDictionary<string, Outputs.AccessPolicyAssociation>? AccessPolicies;
        /// <summary>
        /// A list of groups within Kubernetes to which the IAM principal is mapped to.
        /// </summary>
        public readonly ImmutableArray<string> KubernetesGroups;
        /// <summary>
        /// The IAM Principal ARN which requires Authentication access to the EKS cluster.
        /// </summary>
        public readonly string PrincipalArn;
        /// <summary>
        /// The tags to apply to the AccessEntry.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
        /// Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
        /// </summary>
        public readonly Pulumi.Eks.AccessEntryType? Type;
        /// <summary>
        /// Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private AccessEntry(
            ImmutableDictionary<string, Outputs.AccessPolicyAssociation>? accessPolicies,

            ImmutableArray<string> kubernetesGroups,

            string principalArn,

            ImmutableDictionary<string, string>? tags,

            Pulumi.Eks.AccessEntryType? type,

            string? username)
        {
            AccessPolicies = accessPolicies;
            KubernetesGroups = kubernetesGroups;
            PrincipalArn = principalArn;
            Tags = tags;
            Type = type;
            Username = username;
        }
    }
}
