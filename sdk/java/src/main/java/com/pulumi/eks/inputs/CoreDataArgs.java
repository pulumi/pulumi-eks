// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks.inputs;

import com.pulumi.aws.Provider;
import com.pulumi.aws.ec2.SecurityGroup;
import com.pulumi.aws.eks.Cluster;
import com.pulumi.aws.eks.FargateProfile;
import com.pulumi.aws.eks.inputs.ClusterEncryptionConfigArgs;
import com.pulumi.aws.iam.OpenIdConnectProvider;
import com.pulumi.aws.iam.Role;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.eks.VpcCni;
import com.pulumi.eks.inputs.ClusterNodeGroupOptionsArgs;
import com.pulumi.kubernetes.core.v1.ConfigMap;
import com.pulumi.kubernetes.storage.v1.StorageClass;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Defines the core set of data associated with an EKS cluster, including the network in which it runs.
 * 
 */
public final class CoreDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreDataArgs Empty = new CoreDataArgs();

    @Import(name="awsProvider")
    private @Nullable Output<Provider> awsProvider;

    public Optional<Output<Provider>> awsProvider() {
        return Optional.ofNullable(this.awsProvider);
    }

    @Import(name="cluster", required=true)
    private Output<Cluster> cluster;

    public Output<Cluster> cluster() {
        return this.cluster;
    }

    /**
     * The IAM Role attached to the EKS Cluster
     * 
     */
    @Import(name="clusterIamRole", required=true)
    private Output<Role> clusterIamRole;

    /**
     * @return The IAM Role attached to the EKS Cluster
     * 
     */
    public Output<Role> clusterIamRole() {
        return this.clusterIamRole;
    }

    @Import(name="clusterSecurityGroup", required=true)
    private Output<SecurityGroup> clusterSecurityGroup;

    public Output<SecurityGroup> clusterSecurityGroup() {
        return this.clusterSecurityGroup;
    }

    @Import(name="eksNodeAccess")
    private @Nullable Output<ConfigMap> eksNodeAccess;

    public Optional<Output<ConfigMap>> eksNodeAccess() {
        return Optional.ofNullable(this.eksNodeAccess);
    }

    @Import(name="encryptionConfig")
    private @Nullable Output<ClusterEncryptionConfigArgs> encryptionConfig;

    public Optional<Output<ClusterEncryptionConfigArgs>> encryptionConfig() {
        return Optional.ofNullable(this.encryptionConfig);
    }

    @Import(name="endpoint", required=true)
    private Output<String> endpoint;

    public Output<String> endpoint() {
        return this.endpoint;
    }

    @Import(name="fargateProfile")
    private @Nullable Output<FargateProfile> fargateProfile;

    public Optional<Output<FargateProfile>> fargateProfile() {
        return Optional.ofNullable(this.fargateProfile);
    }

    @Import(name="instanceRoles", required=true)
    private Output<List<Role>> instanceRoles;

    public Output<List<Role>> instanceRoles() {
        return this.instanceRoles;
    }

    @Import(name="kubeconfig")
    private @Nullable Output<Object> kubeconfig;

    public Optional<Output<Object>> kubeconfig() {
        return Optional.ofNullable(this.kubeconfig);
    }

    @Import(name="nodeGroupOptions", required=true)
    private Output<ClusterNodeGroupOptionsArgs> nodeGroupOptions;

    public Output<ClusterNodeGroupOptionsArgs> nodeGroupOptions() {
        return this.nodeGroupOptions;
    }

    @Import(name="nodeSecurityGroupTags")
    private @Nullable Output<Map<String,String>> nodeSecurityGroupTags;

    public Optional<Output<Map<String,String>>> nodeSecurityGroupTags() {
        return Optional.ofNullable(this.nodeSecurityGroupTags);
    }

    @Import(name="oidcProvider")
    private @Nullable Output<OpenIdConnectProvider> oidcProvider;

    public Optional<Output<OpenIdConnectProvider>> oidcProvider() {
        return Optional.ofNullable(this.oidcProvider);
    }

    @Import(name="privateSubnetIds")
    private @Nullable Output<List<String>> privateSubnetIds;

    public Optional<Output<List<String>>> privateSubnetIds() {
        return Optional.ofNullable(this.privateSubnetIds);
    }

    @Import(name="provider", required=true)
    private Output<com.pulumi.kubernetes.Provider> provider;

    public Output<com.pulumi.kubernetes.Provider> provider() {
        return this.provider;
    }

    @Import(name="publicSubnetIds")
    private @Nullable Output<List<String>> publicSubnetIds;

    public Optional<Output<List<String>>> publicSubnetIds() {
        return Optional.ofNullable(this.publicSubnetIds);
    }

    @Import(name="storageClasses")
    private @Nullable Output<Map<String,StorageClass>> storageClasses;

    public Optional<Output<Map<String,StorageClass>>> storageClasses() {
        return Optional.ofNullable(this.storageClasses);
    }

    @Import(name="subnetIds", required=true)
    private Output<List<String>> subnetIds;

    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="vpcCni")
    private @Nullable Output<VpcCni> vpcCni;

    public Optional<Output<VpcCni>> vpcCni() {
        return Optional.ofNullable(this.vpcCni);
    }

    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId;
    }

    private CoreDataArgs() {}

    private CoreDataArgs(CoreDataArgs $) {
        this.awsProvider = $.awsProvider;
        this.cluster = $.cluster;
        this.clusterIamRole = $.clusterIamRole;
        this.clusterSecurityGroup = $.clusterSecurityGroup;
        this.eksNodeAccess = $.eksNodeAccess;
        this.encryptionConfig = $.encryptionConfig;
        this.endpoint = $.endpoint;
        this.fargateProfile = $.fargateProfile;
        this.instanceRoles = $.instanceRoles;
        this.kubeconfig = $.kubeconfig;
        this.nodeGroupOptions = $.nodeGroupOptions;
        this.nodeSecurityGroupTags = $.nodeSecurityGroupTags;
        this.oidcProvider = $.oidcProvider;
        this.privateSubnetIds = $.privateSubnetIds;
        this.provider = $.provider;
        this.publicSubnetIds = $.publicSubnetIds;
        this.storageClasses = $.storageClasses;
        this.subnetIds = $.subnetIds;
        this.tags = $.tags;
        this.vpcCni = $.vpcCni;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreDataArgs $;

        public Builder() {
            $ = new CoreDataArgs();
        }

        public Builder(CoreDataArgs defaults) {
            $ = new CoreDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsProvider(@Nullable Output<Provider> awsProvider) {
            $.awsProvider = awsProvider;
            return this;
        }

        public Builder awsProvider(Provider awsProvider) {
            return awsProvider(Output.of(awsProvider));
        }

        public Builder cluster(Output<Cluster> cluster) {
            $.cluster = cluster;
            return this;
        }

        public Builder cluster(Cluster cluster) {
            return cluster(Output.of(cluster));
        }

        /**
         * @param clusterIamRole The IAM Role attached to the EKS Cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterIamRole(Output<Role> clusterIamRole) {
            $.clusterIamRole = clusterIamRole;
            return this;
        }

        /**
         * @param clusterIamRole The IAM Role attached to the EKS Cluster
         * 
         * @return builder
         * 
         */
        public Builder clusterIamRole(Role clusterIamRole) {
            return clusterIamRole(Output.of(clusterIamRole));
        }

        public Builder clusterSecurityGroup(Output<SecurityGroup> clusterSecurityGroup) {
            $.clusterSecurityGroup = clusterSecurityGroup;
            return this;
        }

        public Builder clusterSecurityGroup(SecurityGroup clusterSecurityGroup) {
            return clusterSecurityGroup(Output.of(clusterSecurityGroup));
        }

        public Builder eksNodeAccess(@Nullable Output<ConfigMap> eksNodeAccess) {
            $.eksNodeAccess = eksNodeAccess;
            return this;
        }

        public Builder eksNodeAccess(ConfigMap eksNodeAccess) {
            return eksNodeAccess(Output.of(eksNodeAccess));
        }

        public Builder encryptionConfig(@Nullable Output<ClusterEncryptionConfigArgs> encryptionConfig) {
            $.encryptionConfig = encryptionConfig;
            return this;
        }

        public Builder encryptionConfig(ClusterEncryptionConfigArgs encryptionConfig) {
            return encryptionConfig(Output.of(encryptionConfig));
        }

        public Builder endpoint(Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        public Builder fargateProfile(@Nullable Output<FargateProfile> fargateProfile) {
            $.fargateProfile = fargateProfile;
            return this;
        }

        public Builder fargateProfile(FargateProfile fargateProfile) {
            return fargateProfile(Output.of(fargateProfile));
        }

        public Builder instanceRoles(Output<List<Role>> instanceRoles) {
            $.instanceRoles = instanceRoles;
            return this;
        }

        public Builder instanceRoles(List<Role> instanceRoles) {
            return instanceRoles(Output.of(instanceRoles));
        }

        public Builder instanceRoles(Role... instanceRoles) {
            return instanceRoles(List.of(instanceRoles));
        }

        public Builder kubeconfig(@Nullable Output<Object> kubeconfig) {
            $.kubeconfig = kubeconfig;
            return this;
        }

        public Builder kubeconfig(Object kubeconfig) {
            return kubeconfig(Output.of(kubeconfig));
        }

        public Builder nodeGroupOptions(Output<ClusterNodeGroupOptionsArgs> nodeGroupOptions) {
            $.nodeGroupOptions = nodeGroupOptions;
            return this;
        }

        public Builder nodeGroupOptions(ClusterNodeGroupOptionsArgs nodeGroupOptions) {
            return nodeGroupOptions(Output.of(nodeGroupOptions));
        }

        public Builder nodeSecurityGroupTags(@Nullable Output<Map<String,String>> nodeSecurityGroupTags) {
            $.nodeSecurityGroupTags = nodeSecurityGroupTags;
            return this;
        }

        public Builder nodeSecurityGroupTags(Map<String,String> nodeSecurityGroupTags) {
            return nodeSecurityGroupTags(Output.of(nodeSecurityGroupTags));
        }

        public Builder oidcProvider(@Nullable Output<OpenIdConnectProvider> oidcProvider) {
            $.oidcProvider = oidcProvider;
            return this;
        }

        public Builder oidcProvider(OpenIdConnectProvider oidcProvider) {
            return oidcProvider(Output.of(oidcProvider));
        }

        public Builder privateSubnetIds(@Nullable Output<List<String>> privateSubnetIds) {
            $.privateSubnetIds = privateSubnetIds;
            return this;
        }

        public Builder privateSubnetIds(List<String> privateSubnetIds) {
            return privateSubnetIds(Output.of(privateSubnetIds));
        }

        public Builder privateSubnetIds(String... privateSubnetIds) {
            return privateSubnetIds(List.of(privateSubnetIds));
        }

        public Builder provider(Output<com.pulumi.kubernetes.Provider> provider) {
            $.provider = provider;
            return this;
        }

        public Builder provider(com.pulumi.kubernetes.Provider provider) {
            return provider(Output.of(provider));
        }

        public Builder publicSubnetIds(@Nullable Output<List<String>> publicSubnetIds) {
            $.publicSubnetIds = publicSubnetIds;
            return this;
        }

        public Builder publicSubnetIds(List<String> publicSubnetIds) {
            return publicSubnetIds(Output.of(publicSubnetIds));
        }

        public Builder publicSubnetIds(String... publicSubnetIds) {
            return publicSubnetIds(List.of(publicSubnetIds));
        }

        public Builder storageClasses(@Nullable Output<Map<String,StorageClass>> storageClasses) {
            $.storageClasses = storageClasses;
            return this;
        }

        public Builder storageClasses(Map<String,StorageClass> storageClasses) {
            return storageClasses(Output.of(storageClasses));
        }

        public Builder subnetIds(Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder vpcCni(@Nullable Output<VpcCni> vpcCni) {
            $.vpcCni = vpcCni;
            return this;
        }

        public Builder vpcCni(VpcCni vpcCni) {
            return vpcCni(Output.of(vpcCni));
        }

        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public CoreDataArgs build() {
            $.cluster = Objects.requireNonNull($.cluster, "expected parameter 'cluster' to be non-null");
            $.clusterIamRole = Objects.requireNonNull($.clusterIamRole, "expected parameter 'clusterIamRole' to be non-null");
            $.clusterSecurityGroup = Objects.requireNonNull($.clusterSecurityGroup, "expected parameter 'clusterSecurityGroup' to be non-null");
            $.endpoint = Objects.requireNonNull($.endpoint, "expected parameter 'endpoint' to be non-null");
            $.instanceRoles = Objects.requireNonNull($.instanceRoles, "expected parameter 'instanceRoles' to be non-null");
            $.nodeGroupOptions = Objects.requireNonNull($.nodeGroupOptions, "expected parameter 'nodeGroupOptions' to be non-null");
            $.provider = Objects.requireNonNull($.provider, "expected parameter 'provider' to be non-null");
            $.subnetIds = Objects.requireNonNull($.subnetIds, "expected parameter 'subnetIds' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
