// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


/**
 * MIME document parts for nodeadm configuration. This can be shell scripts, nodeadm configuration or any other user data compatible script.
 * 
 * See for more details: https://awslabs.github.io/amazon-eks-ami/nodeadm/.
 * 
 */
public final class NodeadmOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeadmOptionsArgs Empty = new NodeadmOptionsArgs();

    /**
     * The ARN of the access policy to associate with the principal
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The ARN of the access policy to associate with the principal
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * The MIME type of the content. Examples are `text/x-shellscript; charset=&#34;us-ascii&#34;` for shell scripts, and `application/node.eks.aws` nodeadm configuration.
     * 
     */
    @Import(name="contentType", required=true)
    private Output<String> contentType;

    /**
     * @return The MIME type of the content. Examples are `text/x-shellscript; charset=&#34;us-ascii&#34;` for shell scripts, and `application/node.eks.aws` nodeadm configuration.
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }

    private NodeadmOptionsArgs() {}

    private NodeadmOptionsArgs(NodeadmOptionsArgs $) {
        this.content = $.content;
        this.contentType = $.contentType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeadmOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeadmOptionsArgs $;

        public Builder() {
            $ = new NodeadmOptionsArgs();
        }

        public Builder(NodeadmOptionsArgs defaults) {
            $ = new NodeadmOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The ARN of the access policy to associate with the principal
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The ARN of the access policy to associate with the principal
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param contentType The MIME type of the content. Examples are `text/x-shellscript; charset=&#34;us-ascii&#34;` for shell scripts, and `application/node.eks.aws` nodeadm configuration.
         * 
         * @return builder
         * 
         */
        public Builder contentType(Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType The MIME type of the content. Examples are `text/x-shellscript; charset=&#34;us-ascii&#34;` for shell scripts, and `application/node.eks.aws` nodeadm configuration.
         * 
         * @return builder
         * 
         */
        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public NodeadmOptionsArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("NodeadmOptionsArgs", "content");
            }
            if ($.contentType == null) {
                throw new MissingRequiredPropertyException("NodeadmOptionsArgs", "contentType");
            }
            return $;
        }
    }

}
