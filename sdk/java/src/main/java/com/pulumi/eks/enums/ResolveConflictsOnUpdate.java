// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks.enums;

import com.pulumi.core.annotations.EnumType;
import java.lang.String;
import java.util.Objects;
import java.util.StringJoiner;

    /**
     * How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
     * 
     */
    @EnumType
    public enum ResolveConflictsOnUpdate {
        /**
         * Amazon EKS doesn&#39;t change the value. The update might fail.
         * 
         */
        None("NONE"),
        /**
         * Amazon EKS overwrites the changed value back to the Amazon EKS default value.
         * 
         */
        Overwrite("OVERWRITE"),
        /**
         * Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.
         * 
         */
        Preserve("PRESERVE");

        private final String value;

        ResolveConflictsOnUpdate(String value) {
            this.value = Objects.requireNonNull(value);
        }

        @EnumType.Converter
        public String getValue() {
            return this.value;
        }

        @Override
        public java.lang.String toString() {
            return new StringJoiner(", ", "ResolveConflictsOnUpdate[", "]")
                .add("value='" + this.value + "'")
                .toString();
        }
    }
