// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.eks.enums.AccessEntryType;
import com.pulumi.eks.inputs.AccessPolicyAssociationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Access entries allow an IAM principal to access your cluster.
 * 
 * You have the following options for authorizing an IAM principal to access Kubernetes objects on your cluster: Kubernetes role-based access control (RBAC), Amazon EKS, or both.
 * Kubernetes RBAC authorization requires you to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects, in addition to managing access entries. If you use Amazon EKS authorization exclusively, you don&#39;t need to create and manage Kubernetes Role , ClusterRole , RoleBinding , and ClusterRoleBinding objects.
 * 
 */
public final class AccessEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccessEntryArgs Empty = new AccessEntryArgs();

    /**
     * The access policies to associate to the access entry.
     * 
     */
    @Import(name="accessPolicies")
    private @Nullable Map<String,AccessPolicyAssociationArgs> accessPolicies;

    /**
     * @return The access policies to associate to the access entry.
     * 
     */
    public Optional<Map<String,AccessPolicyAssociationArgs>> accessPolicies() {
        return Optional.ofNullable(this.accessPolicies);
    }

    /**
     * A list of groups within Kubernetes to which the IAM principal is mapped to.
     * 
     */
    @Import(name="kubernetesGroups")
    private @Nullable Output<List<String>> kubernetesGroups;

    /**
     * @return A list of groups within Kubernetes to which the IAM principal is mapped to.
     * 
     */
    public Optional<Output<List<String>>> kubernetesGroups() {
        return Optional.ofNullable(this.kubernetesGroups);
    }

    /**
     * The IAM Principal ARN which requires Authentication access to the EKS cluster.
     * 
     */
    @Import(name="principalArn", required=true)
    private Output<String> principalArn;

    /**
     * @return The IAM Principal ARN which requires Authentication access to the EKS cluster.
     * 
     */
    public Output<String> principalArn() {
        return this.principalArn;
    }

    /**
     * The tags to apply to the AccessEntry.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return The tags to apply to the AccessEntry.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
     * 
     */
    @Import(name="type")
    private @Nullable Output<AccessEntryType> type;

    /**
     * @return The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
     * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
     * 
     */
    public Optional<Output<AccessEntryType>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private AccessEntryArgs() {}

    private AccessEntryArgs(AccessEntryArgs $) {
        this.accessPolicies = $.accessPolicies;
        this.kubernetesGroups = $.kubernetesGroups;
        this.principalArn = $.principalArn;
        this.tags = $.tags;
        this.type = $.type;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccessEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccessEntryArgs $;

        public Builder() {
            $ = new AccessEntryArgs();
        }

        public Builder(AccessEntryArgs defaults) {
            $ = new AccessEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPolicies The access policies to associate to the access entry.
         * 
         * @return builder
         * 
         */
        public Builder accessPolicies(@Nullable Map<String,AccessPolicyAssociationArgs> accessPolicies) {
            $.accessPolicies = accessPolicies;
            return this;
        }

        /**
         * @param kubernetesGroups A list of groups within Kubernetes to which the IAM principal is mapped to.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(@Nullable Output<List<String>> kubernetesGroups) {
            $.kubernetesGroups = kubernetesGroups;
            return this;
        }

        /**
         * @param kubernetesGroups A list of groups within Kubernetes to which the IAM principal is mapped to.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(List<String> kubernetesGroups) {
            return kubernetesGroups(Output.of(kubernetesGroups));
        }

        /**
         * @param kubernetesGroups A list of groups within Kubernetes to which the IAM principal is mapped to.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesGroups(String... kubernetesGroups) {
            return kubernetesGroups(List.of(kubernetesGroups));
        }

        /**
         * @param principalArn The IAM Principal ARN which requires Authentication access to the EKS cluster.
         * 
         * @return builder
         * 
         */
        public Builder principalArn(Output<String> principalArn) {
            $.principalArn = principalArn;
            return this;
        }

        /**
         * @param principalArn The IAM Principal ARN which requires Authentication access to the EKS cluster.
         * 
         * @return builder
         * 
         */
        public Builder principalArn(String principalArn) {
            return principalArn(Output.of(principalArn));
        }

        /**
         * @param tags The tags to apply to the AccessEntry.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The tags to apply to the AccessEntry.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param type The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
         * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<AccessEntryType> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the new access entry. Valid values are STANDARD, FARGATE_LINUX, EC2_LINUX, and EC2_WINDOWS.
         * Defaults to STANDARD which provides the standard workflow. EC2_LINUX, EC2_WINDOWS, FARGATE_LINUX types disallow users to input a username or kubernetesGroup, and prevent associating access policies.
         * 
         * @return builder
         * 
         */
        public Builder type(AccessEntryType type) {
            return type(Output.of(type));
        }

        /**
         * @param username Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Defaults to the principalArn if the principal is a user, else defaults to assume-role/session-name.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public AccessEntryArgs build() {
            $.principalArn = Objects.requireNonNull($.principalArn, "expected parameter 'principalArn' to be non-null");
            return $;
        }
    }

}
