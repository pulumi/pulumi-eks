// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.eks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.eks.enums.ResolveConflictsOnCreate;
import com.pulumi.eks.enums.ResolveConflictsOnUpdate;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CoreDnsAddonOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CoreDnsAddonOptionsArgs Empty = new CoreDnsAddonOptionsArgs();

    /**
     * Whether or not to create the Addon in the cluster
     * 
     */
    @Import(name="enabled")
    private @Nullable Boolean enabled;

    /**
     * @return Whether or not to create the Addon in the cluster
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are `NONE` and `OVERWRITE`. For more details see the [CreateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html) API Docs.
     * 
     */
    @Import(name="resolveConflictsOnCreate")
    private @Nullable ResolveConflictsOnCreate resolveConflictsOnCreate;

    /**
     * @return How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are `NONE` and `OVERWRITE`. For more details see the [CreateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html) API Docs.
     * 
     */
    public Optional<ResolveConflictsOnCreate> resolveConflictsOnCreate() {
        return Optional.ofNullable(this.resolveConflictsOnCreate);
    }

    /**
     * How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
     * 
     */
    @Import(name="resolveConflictsOnUpdate")
    private @Nullable ResolveConflictsOnUpdate resolveConflictsOnUpdate;

    /**
     * @return How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
     * 
     */
    public Optional<ResolveConflictsOnUpdate> resolveConflictsOnUpdate() {
        return Optional.ofNullable(this.resolveConflictsOnUpdate);
    }

    /**
     * The version of the EKS add-on. The version must match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The version of the EKS add-on. The version must match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private CoreDnsAddonOptionsArgs() {}

    private CoreDnsAddonOptionsArgs(CoreDnsAddonOptionsArgs $) {
        this.enabled = $.enabled;
        this.resolveConflictsOnCreate = $.resolveConflictsOnCreate;
        this.resolveConflictsOnUpdate = $.resolveConflictsOnUpdate;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CoreDnsAddonOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CoreDnsAddonOptionsArgs $;

        public Builder() {
            $ = new CoreDnsAddonOptionsArgs();
        }

        public Builder(CoreDnsAddonOptionsArgs defaults) {
            $ = new CoreDnsAddonOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether or not to create the Addon in the cluster
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param resolveConflictsOnCreate How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are `NONE` and `OVERWRITE`. For more details see the [CreateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html) API Docs.
         * 
         * @return builder
         * 
         */
        public Builder resolveConflictsOnCreate(@Nullable ResolveConflictsOnCreate resolveConflictsOnCreate) {
            $.resolveConflictsOnCreate = resolveConflictsOnCreate;
            return this;
        }

        /**
         * @param resolveConflictsOnUpdate How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
         * 
         * @return builder
         * 
         */
        public Builder resolveConflictsOnUpdate(@Nullable ResolveConflictsOnUpdate resolveConflictsOnUpdate) {
            $.resolveConflictsOnUpdate = resolveConflictsOnUpdate;
            return this;
        }

        /**
         * @param version The version of the EKS add-on. The version must match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the EKS add-on. The version must match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public CoreDnsAddonOptionsArgs build() {
            $.enabled = Codegen.booleanProp("enabled").arg($.enabled).def(true).getNullable();
            $.resolveConflictsOnCreate = Codegen.objectProp("resolveConflictsOnCreate", ResolveConflictsOnCreate.class).arg($.resolveConflictsOnCreate).def(ResolveConflictsOnCreate.Overwrite).getNullable();
            $.resolveConflictsOnUpdate = Codegen.objectProp("resolveConflictsOnUpdate", ResolveConflictsOnUpdate.class).arg($.resolveConflictsOnUpdate).def(ResolveConflictsOnUpdate.Overwrite).getNullable();
            return $;
        }
    }

}
